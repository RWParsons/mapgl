% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers.R
\name{add_symbol_layer}
\alias{add_symbol_layer}
\title{Add a symbol layer to a Mapbox GL map}
\usage{
add_symbol_layer(
  map,
  id,
  source,
  source_layer = NULL,
  icon_allow_overlap = NULL,
  icon_anchor = NULL,
  icon_color = NULL,
  icon_halo_color = NULL,
  icon_halo_width = NULL,
  icon_ignore_placement = NULL,
  icon_image = NULL,
  icon_keep_upright = NULL,
  icon_offset = NULL,
  icon_opacity = NULL,
  icon_rotate = NULL,
  icon_size = NULL,
  icon_text_fit = NULL,
  text_anchor = NULL,
  text_color = NULL,
  text_field = NULL,
  text_font = NULL,
  text_halo_color = NULL,
  text_halo_width = NULL,
  text_ignore_placement = NULL,
  text_keep_upright = NULL,
  text_offset = NULL,
  text_opacity = NULL,
  text_size = NULL,
  visibility = "visible",
  slot = NULL,
  min_zoom = NULL,
  max_zoom = NULL,
  popup = NULL,
  tooltip = NULL
)
}
\arguments{
\item{map}{A map object created by the \code{mapboxgl} function.}

\item{id}{A unique ID for the layer.}

\item{source}{The ID of the source, alternatively an sf object (which will be converted to a GeoJSON source) or a named list that specifies \code{type} and \code{url} for a remote source.}

\item{source_layer}{The source layer (for vector sources).}

\item{icon_allow_overlap}{If true, the icon will be visible even if it collides with other previously drawn symbols.}

\item{icon_anchor}{Part of the icon placed closest to the anchor.}

\item{icon_color}{The color of the icon. This can only be specified as a string.}

\item{icon_halo_color}{The color of the icon's halo. This can only be specified as a string.}

\item{icon_halo_width}{Distance of halo to icon outline.}

\item{icon_ignore_placement}{If true, the icon will be visible even if it collides with other symbols.}

\item{icon_image}{Name of image in sprite to use for drawing an image background.  To use values in a column of your input dataset, use \code{c('get', 'YOUR_ICON_COLUMN_NAME')}}

\item{icon_keep_upright}{If TRUE, the icon will be kept upright.}

\item{icon_offset}{Offset distance of icon.}

\item{icon_opacity}{The opacity at which the icon will be drawn.}

\item{icon_rotate}{Rotates the icon clockwise.}

\item{icon_size}{The size of the icon.}

\item{icon_text_fit}{Scales the text to fit the icon.}

\item{text_anchor}{Part of the text placed closest to the anchor.}

\item{text_color}{The color with which the text will be drawn.}

\item{text_field}{Value to use for a text label.}

\item{text_font}{Font stack to use for displaying text.}

\item{text_halo_color}{The color of the text's halo. This can only be specified as a string.}

\item{text_halo_width}{Distance of halo to text outline.}

\item{text_ignore_placement}{If TRUE, the text will be visible even if it collides with other symbols.}

\item{text_keep_upright}{If TRUE, the text will be kept upright.}

\item{text_offset}{Offset distance of text.}

\item{text_opacity}{The opacity at which the text will be drawn.}

\item{text_size}{The size of the text.}

\item{visibility}{Whether this layer is displayed.}

\item{slot}{An optional slot for layer order.}

\item{min_zoom}{The minimum zoom level for the layer.}

\item{max_zoom}{The maximum zoom level for the layer.}

\item{popup}{A column name containing information to display in a popup on click.  Columns containing HTML will be parsed.}

\item{tooltip}{A column name containing information to display in a tooltip on hover. Columns containing HTML will be parsed.}
}
\value{
The modified map object with the new symbol layer added.
}
\description{
Add a symbol layer to a Mapbox GL map
}
\examples{
\dontrun{
library(mapgl)
library(sf)
library(dplyr)

# Set seed for reproducibility
set.seed(1234)

# Define the bounding box for Washington DC (approximately)
bbox <- st_bbox(c(xmin = -77.119759, ymin = 38.791645, xmax = -76.909393, ymax = 38.995548), #' crs = st_crs(4326))

# Generate 30 random points within the bounding box
random_points <- st_as_sf(
  data.frame(
    id = 1:30,
    lon = runif(30, bbox["xmin"], bbox["xmax"]),
    lat = runif(30, bbox["ymin"], bbox["ymax"])
  ),
  coords = c("lon", "lat"),
  crs = 4326
)

# Assign random icons
icons <- c('music', 'bar', 'theatre', 'bicycle')
random_points <- random_points |>
  mutate(icon = sample(icons, n(), replace = TRUE))

# Map with icons
mapboxgl(style = mapbox_style("light")) |>
  fit_bounds(random_points, animate = FALSE) |>
  add_symbol_layer(
    id = "points-of-interest",
    source = random_points,
    icon_image = c("get", "icon"),
    icon_allow_overlap = TRUE,
    tooltip = "icon"
  )
}
}
